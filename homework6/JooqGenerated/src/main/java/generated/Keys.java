/*
 * This file is generated by jOOQ.
 */
package generated;


import generated.tables.FlywaySchemaHistory;
import generated.tables.InvoiceData;
import generated.tables.InvoiceInfo;
import generated.tables.Products;
import generated.tables.Providers;
import generated.tables.records.FlywaySchemaHistoryRecord;
import generated.tables.records.InvoiceDataRecord;
import generated.tables.records.InvoiceInfoRecord;
import generated.tables.records.ProductsRecord;
import generated.tables.records.ProvidersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<InvoiceDataRecord> INVOICE_DATA_PKEY = Internal.createUniqueKey(InvoiceData.INVOICE_DATA, DSL.name("invoice_data_pkey"), new TableField[] { InvoiceData.INVOICE_DATA.ID }, true);
    public static final UniqueKey<InvoiceInfoRecord> INVOICE_INFO_PKEY = Internal.createUniqueKey(InvoiceInfo.INVOICE_INFO, DSL.name("invoice_info_pkey"), new TableField[] { InvoiceInfo.INVOICE_INFO.ID }, true);
    public static final UniqueKey<ProductsRecord> PRODUCTS_PKEY = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("products_pkey"), new TableField[] { Products.PRODUCTS.ID }, true);
    public static final UniqueKey<ProvidersRecord> PROVIDERS_PKEY = Internal.createUniqueKey(Providers.PROVIDERS, DSL.name("providers_pkey"), new TableField[] { Providers.PROVIDERS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InvoiceDataRecord, InvoiceInfoRecord> INVOICE_DATA__INVOICE_DATA_INVOICE_ID_FKEY = Internal.createForeignKey(InvoiceData.INVOICE_DATA, DSL.name("invoice_data_invoice_id_fkey"), new TableField[] { InvoiceData.INVOICE_DATA.INVOICE_ID }, Keys.INVOICE_INFO_PKEY, new TableField[] { InvoiceInfo.INVOICE_INFO.ID }, true);
    public static final ForeignKey<InvoiceDataRecord, ProductsRecord> INVOICE_DATA__INVOICE_DATA_PRODUCT_FKEY = Internal.createForeignKey(InvoiceData.INVOICE_DATA, DSL.name("invoice_data_product_fkey"), new TableField[] { InvoiceData.INVOICE_DATA.PRODUCT }, Keys.PRODUCTS_PKEY, new TableField[] { Products.PRODUCTS.ID }, true);
    public static final ForeignKey<InvoiceInfoRecord, ProvidersRecord> INVOICE_INFO__INVOICE_INFO_PROVIDER_FKEY = Internal.createForeignKey(InvoiceInfo.INVOICE_INFO, DSL.name("invoice_info_provider_fkey"), new TableField[] { InvoiceInfo.INVOICE_INFO.PROVIDER }, Keys.PROVIDERS_PKEY, new TableField[] { Providers.PROVIDERS.ID }, true);
}
